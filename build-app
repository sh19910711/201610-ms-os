#!/usr/bin/env ruby
# Usage: build-app [app_path]
require 'yaml'
require 'fileutils'

class Application
  def initialize(build_dir, app_path)
    @path = File.absolute_path(app_path)
    @build_dir = build_dir
    @yaml = YAML.load(File.open(File.join(@path, 'application.yaml')).read)
    validate
    @sources = Dir['api/*'] + @yaml['sources'].map {|f| File.join(@path, f) }
  end

  def generate_files
    FileUtils.makedirs(@build_dir)

    # Generate app.h
    create_file(File.join(@build_dir, 'app.h'), <<EOF)
#ifndef __BASEOS_APP_H__
#define __BASEOS_APP_H__
extern "C" {
extern void setup();
}
#endif
EOF

    # Copy source files into the build_dir
    objs = []
    @sources.each do |path|
      dest_dir = File.join(@build_dir, File.basename(path))
      FileUtils.cp(path, dest_dir)
      if File.extname(path) == '.cpp'
        objs << File.basename(path, '.cpp') + '.o'
      end
    end

    # Generate Resea app.yaml
    create_file(File.join(@build_dir, 'app.yaml'), <<EOF)
name: #{@yaml['name']}
objs: [#{objs.join(',')}]
requires:
  - channel
implements: []
EOF
  end

  private

  def validate
    if @yaml['api'] != 1
      raise "unsupported API version (expected 1)"
    end

    if @yaml['lang'] != 'c++'
      raise "unsupported language (expected c++)"
    end
  end

  def create_file(path, s)
    f = File.open(path, 'w')
    f.write(s)
    f.close()
  end
end


app = Application.new(ARGV[0], ARGV[1])
app.generate_files
